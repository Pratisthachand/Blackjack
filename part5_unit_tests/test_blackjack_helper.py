from blackjack_helper import *
from test_helper import *
import unittest

class TestBlackjackHelper(unittest.TestCase):
  """
  Class for testing blackjack helper functions.
  """

  def test_print_card_name_example(self):
    """
    Example of a test to compare printed statements with expected

    This does not count as one of your tests
    """
    self.assertEqual(get_print(print_card_name, 2), "Drew a 2\n")
  
  def test_mock_randint_example(self):
    """
    Example of a test to compare output for a function that calls randint

    This does not count as one of your tests
    """
    self.assertEqual(mock_random([3], draw_card), 3)
    self.assertEqual(mock_random([3, 5], draw_starting_hand, "DEALER"), 8)
  
  def test_print_card_name(self):
      self.assertEqual(get_print(print_card_name, 1), "Drew an Ace\n")
      self.assertEqual(get_print(print_card_name, 2), "Drew a 2\n")
      self.assertEqual(get_print(print_card_name, 3), "Drew a 3\n")
      self.assertEqual(get_print(print_card_name, 4), "Drew a 4\n")
      self.assertEqual(get_print(print_card_name, 5), "Drew a 5\n")
      self.assertEqual(get_print(print_card_name, 6), "Drew a 6\n")
      self.assertEqual(get_print(print_card_name, 7), "Drew a 7\n")
      self.assertEqual(get_print(print_card_name, 8), "Drew an 8\n")
      self.assertEqual(get_print(print_card_name, 9), "Drew a 9\n")
      self.assertEqual(get_print(print_card_name, 10), "Drew a 10\n")
      self.assertEqual(get_print(print_card_name, 11), "Drew a Jack\n")
      self.assertEqual(get_print(print_card_name, 12), "Drew a Queen\n")
      self.assertEqual(get_print(print_card_name, 13), "Drew a King\n")

  def test_draw_card(self):
    self.assertEqual(mock_random([1], draw_card), 11)
    self.assertEqual(mock_random([2], draw_card), 2)
    self.assertEqual(mock_random([3], draw_card), 3)
    self.assertEqual(mock_random([4], draw_card), 4)
    self.assertEqual(mock_random([5], draw_card), 5)
    self.assertEqual(mock_random([6], draw_card), 6)
    self.assertEqual(mock_random([7], draw_card), 7)
    self.assertEqual(mock_random([8], draw_card), 8)
    self.assertEqual(mock_random([9], draw_card), 9)
    self.assertEqual(mock_random([10], draw_card), 10)
    self.assertEqual(mock_random([11], draw_card), 10)
    self.assertEqual(mock_random([12], draw_card), 10)
    self.assertEqual(mock_random([13], draw_card), 10)

  def test_print_header(self):
    self.assertEqual(get_print(print_header, "YOUR"), "-----------\nYOUR\n-----------\n")
    self.assertEqual(get_print(print_header, "DEALER"), "-----------\nDEALER\n-----------\n")
    self.assertEqual(get_print(print_header, ""), "-----------\n\n-----------\n")
    
  def test_draw_starting_hand(self):

      self.assertEqual(mock_random([1,1], draw_starting_hand, "USER"), 22)
      self.assertEqual(mock_random([1,2], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([1,3], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([1,4], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([1,5], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([1,6], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([1,7], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([1,8], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([1,9], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([1,10], draw_starting_hand, "USER"), 21)
      self.assertEqual(mock_random([1,11], draw_starting_hand, "USER"), 21)
      self.assertEqual(mock_random([1,12], draw_starting_hand, "USER"), 21)
      self.assertEqual(mock_random([1,13], draw_starting_hand, "USER"), 21)

      self.assertEqual(mock_random([2,1], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([2,2], draw_starting_hand, "USER"), 4)
      self.assertEqual(mock_random([2,3], draw_starting_hand, "USER"), 5)
      self.assertEqual(mock_random([2,4], draw_starting_hand, "USER"), 6)
      self.assertEqual(mock_random([2,5], draw_starting_hand, "USER"), 7)
      self.assertEqual(mock_random([2,6], draw_starting_hand, "USER"), 8)
      self.assertEqual(mock_random([2,7], draw_starting_hand, "USER"), 9)
      self.assertEqual(mock_random([2,8], draw_starting_hand, "USER"), 10)
      self.assertEqual(mock_random([2,9], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([2,10], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([2,11], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([2,12], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([2,13], draw_starting_hand, "USER"), 12)

      self.assertEqual(mock_random([3,1], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([3,2], draw_starting_hand, "USER"), 5)
      self.assertEqual(mock_random([3,3], draw_starting_hand, "USER"), 6)
      self.assertEqual(mock_random([3,4], draw_starting_hand, "USER"), 7)
      self.assertEqual(mock_random([3,5], draw_starting_hand, "USER"), 8)
      self.assertEqual(mock_random([3,6], draw_starting_hand, "USER"), 9)
      self.assertEqual(mock_random([3,7], draw_starting_hand, "USER"), 10)
      self.assertEqual(mock_random([3,8], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([3,9], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([3,10], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([3,11], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([3,12], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([3,13], draw_starting_hand, "USER"), 13)

      self.assertEqual(mock_random([4,1], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([4,2], draw_starting_hand, "USER"), 6)
      self.assertEqual(mock_random([4,3], draw_starting_hand, "USER"), 7)
      self.assertEqual(mock_random([4,4], draw_starting_hand, "USER"), 8)
      self.assertEqual(mock_random([4,5], draw_starting_hand, "USER"), 9)
      self.assertEqual(mock_random([4,6], draw_starting_hand, "USER"), 10)
      self.assertEqual(mock_random([4,7], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([4,8], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([4,9], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([4,10], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([4,11], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([4,12], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([4,13], draw_starting_hand, "USER"), 14)

      self.assertEqual(mock_random([5,1], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([5,2], draw_starting_hand, "USER"), 7)
      self.assertEqual(mock_random([5,3], draw_starting_hand, "USER"), 8)
      self.assertEqual(mock_random([5,4], draw_starting_hand, "USER"), 9)
      self.assertEqual(mock_random([5,5], draw_starting_hand, "USER"), 10)
      self.assertEqual(mock_random([5,6], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([5,7], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([5,8], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([5,9], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([5,10], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([5,11], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([5,12], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([5,13], draw_starting_hand, "USER"), 15)

      self.assertEqual(mock_random([6,1], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([6,2], draw_starting_hand, "USER"), 8)
      self.assertEqual(mock_random([6,3], draw_starting_hand, "USER"), 9)
      self.assertEqual(mock_random([6,4], draw_starting_hand, "USER"), 10)
      self.assertEqual(mock_random([6,5], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([6,6], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([6,7], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([6,8], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([6,9], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([6,10], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([6,11], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([6,12], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([6,13], draw_starting_hand, "USER"), 16)

      self.assertEqual(mock_random([7,1], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([7,2], draw_starting_hand, "USER"), 9)
      self.assertEqual(mock_random([7,3], draw_starting_hand, "USER"), 10)
      self.assertEqual(mock_random([7,4], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([7,5], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([7,6], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([7,7], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([7,8], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([7,9], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([7,10], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([7,11], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([7,12], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([7,13], draw_starting_hand, "USER"), 17)

      self.assertEqual(mock_random([8,1], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([8,2], draw_starting_hand, "USER"), 10)
      self.assertEqual(mock_random([8,3], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([8,4], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([8,5], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([8,6], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([8,7], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([8,8], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([8,9], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([8,10], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([8,11], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([8,12], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([8,13], draw_starting_hand, "USER"), 18)

      self.assertEqual(mock_random([9,1], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([9,2], draw_starting_hand, "USER"), 11)
      self.assertEqual(mock_random([9,3], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([9,4], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([9,5], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([9,6], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([9,7], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([9,8], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([9,9], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([9,10], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([9,11], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([9,12], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([9,13], draw_starting_hand, "USER"), 19)

      self.assertEqual(mock_random([10,1], draw_starting_hand, "USER"), 21)
      self.assertEqual(mock_random([10,2], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([10,3], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([10,4], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([10,5], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([10,6], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([10,7], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([10,8], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([10,9], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([10,10], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([10,11], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([10,12], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([10,13], draw_starting_hand, "USER"), 20)

      self.assertEqual(mock_random([11,1], draw_starting_hand, "USER"), 21)
      self.assertEqual(mock_random([11,2], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([11,3], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([11,4], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([11,5], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([11,6], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([11,7], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([11,8], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([11,9], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([11,10], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([11,11], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([11,12], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([11,13], draw_starting_hand, "USER"), 20)

      self.assertEqual(mock_random([12,1], draw_starting_hand, "USER"), 21)
      self.assertEqual(mock_random([12,2], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([12,3], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([12,4], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([12,5], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([12,6], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([12,7], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([12,8], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([12,9], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([12,10], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([12,11], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([12,12], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([12,13], draw_starting_hand, "USER"), 20)

      self.assertEqual(mock_random([13,1], draw_starting_hand, "USER"), 21)
      self.assertEqual(mock_random([13,2], draw_starting_hand, "USER"), 12)
      self.assertEqual(mock_random([13,3], draw_starting_hand, "USER"), 13)
      self.assertEqual(mock_random([13,4], draw_starting_hand, "USER"), 14)
      self.assertEqual(mock_random([13,5], draw_starting_hand, "USER"), 15)
      self.assertEqual(mock_random([13,6], draw_starting_hand, "USER"), 16)
      self.assertEqual(mock_random([13,7], draw_starting_hand, "USER"), 17)
      self.assertEqual(mock_random([13,8], draw_starting_hand, "USER"), 18)
      self.assertEqual(mock_random([13,9], draw_starting_hand, "USER"), 19)
      self.assertEqual(mock_random([13,10], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([13,11], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([13,12], draw_starting_hand, "USER"), 20)
      self.assertEqual(mock_random([13,13], draw_starting_hand, "USER"), 20)

      self.assertEqual(mock_random([1,1], draw_starting_hand, "DEALER"), 22)
      self.assertEqual(mock_random([1,2], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([1,3], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([1,4], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([1,5], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([1,6], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([1,7], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([1,8], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([1,9], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([1,10], draw_starting_hand, "DEALER"), 21)
      self.assertEqual(mock_random([1,11], draw_starting_hand, "DEALER"), 21)
      self.assertEqual(mock_random([1,12], draw_starting_hand, "DEALER"), 21)
      self.assertEqual(mock_random([1,13], draw_starting_hand, "DEALER"), 21)

      self.assertEqual(mock_random([2,1], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([2,2], draw_starting_hand, "DEALER"), 4)
      self.assertEqual(mock_random([2,3], draw_starting_hand, "DEALER"), 5)
      self.assertEqual(mock_random([2,4], draw_starting_hand, "DEALER"), 6)
      self.assertEqual(mock_random([2,5], draw_starting_hand, "DEALER"), 7)
      self.assertEqual(mock_random([2,6], draw_starting_hand, "DEALER"), 8)
      self.assertEqual(mock_random([2,7], draw_starting_hand, "DEALER"), 9)
      self.assertEqual(mock_random([2,8], draw_starting_hand, "DEALER"), 10)
      self.assertEqual(mock_random([2,9], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([2,10], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([2,11], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([2,12], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([2,13], draw_starting_hand, "DEALER"), 12)

      self.assertEqual(mock_random([3,1], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([3,2], draw_starting_hand, "DEALER"), 5)
      self.assertEqual(mock_random([3,3], draw_starting_hand, "DEALER"), 6)
      self.assertEqual(mock_random([3,4], draw_starting_hand, "DEALER"), 7)
      self.assertEqual(mock_random([3,5], draw_starting_hand, "DEALER"), 8)
      self.assertEqual(mock_random([3,6], draw_starting_hand, "DEALER"), 9)
      self.assertEqual(mock_random([3,7], draw_starting_hand, "DEALER"), 10)
      self.assertEqual(mock_random([3,8], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([3,9], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([3,10], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([3,11], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([3,12], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([3,13], draw_starting_hand, "DEALER"), 13)

      self.assertEqual(mock_random([4,1], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([4,2], draw_starting_hand, "DEALER"), 6)
      self.assertEqual(mock_random([4,3], draw_starting_hand, "DEALER"), 7)
      self.assertEqual(mock_random([4,4], draw_starting_hand, "DEALER"), 8)
      self.assertEqual(mock_random([4,5], draw_starting_hand, "DEALER"), 9)
      self.assertEqual(mock_random([4,6], draw_starting_hand, "DEALER"), 10)
      self.assertEqual(mock_random([4,7], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([4,8], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([4,9], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([4,10], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([4,11], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([4,12], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([4,13], draw_starting_hand, "DEALER"), 14)

      self.assertEqual(mock_random([5,1], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([5,2], draw_starting_hand, "DEALER"), 7)
      self.assertEqual(mock_random([5,3], draw_starting_hand, "DEALER"), 8)
      self.assertEqual(mock_random([5,4], draw_starting_hand, "DEALER"), 9)
      self.assertEqual(mock_random([5,5], draw_starting_hand, "DEALER"), 10)
      self.assertEqual(mock_random([5,6], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([5,7], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([5,8], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([5,9], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([5,10], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([5,11], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([5,12], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([5,13], draw_starting_hand, "DEALER"), 15)

      self.assertEqual(mock_random([6,1], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([6,2], draw_starting_hand, "DEALER"), 8)
      self.assertEqual(mock_random([6,3], draw_starting_hand, "DEALER"), 9)
      self.assertEqual(mock_random([6,4], draw_starting_hand, "DEALER"), 10)
      self.assertEqual(mock_random([6,5], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([6,6], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([6,7], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([6,8], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([6,9], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([6,10], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([6,11], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([6,12], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([6,13], draw_starting_hand, "DEALER"), 16)

      self.assertEqual(mock_random([7,1], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([7,2], draw_starting_hand, "DEALER"), 9)
      self.assertEqual(mock_random([7,3], draw_starting_hand, "DEALER"), 10)
      self.assertEqual(mock_random([7,4], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([7,5], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([7,6], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([7,7], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([7,8], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([7,9], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([7,10], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([7,11], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([7,12], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([7,13], draw_starting_hand, "DEALER"), 17)

      self.assertEqual(mock_random([8,1], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([8,2], draw_starting_hand, "DEALER"), 10)
      self.assertEqual(mock_random([8,3], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([8,4], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([8,5], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([8,6], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([8,7], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([8,8], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([8,9], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([8,10], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([8,11], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([8,12], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([8,13], draw_starting_hand, "DEALER"), 18)

      self.assertEqual(mock_random([9,1], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([9,2], draw_starting_hand, "DEALER"), 11)
      self.assertEqual(mock_random([9,3], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([9,4], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([9,5], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([9,6], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([9,7], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([9,8], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([9,9], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([9,10], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([9,11], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([9,12], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([9,13], draw_starting_hand, "DEALER"), 19)

      self.assertEqual(mock_random([10,1], draw_starting_hand, "DEALER"), 21)
      self.assertEqual(mock_random([10,2], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([10,3], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([10,4], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([10,5], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([10,6], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([10,7], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([10,8], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([10,9], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([10,10], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([10,11], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([10,12], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([10,13], draw_starting_hand, "DEALER"), 20)

      self.assertEqual(mock_random([11,1], draw_starting_hand, "DEALER"), 21)
      self.assertEqual(mock_random([11,2], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([11,3], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([11,4], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([11,5], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([11,6], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([11,7], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([11,8], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([11,9], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([11,10], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([11,11], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([11,12], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([11,13], draw_starting_hand, "DEALER"), 20)

      self.assertEqual(mock_random([12,1], draw_starting_hand, "DEALER"), 21)
      self.assertEqual(mock_random([12,2], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([12,3], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([12,4], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([12,5], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([12,6], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([12,7], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([12,8], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([12,9], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([12,10], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([12,11], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([12,12], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([12,13], draw_starting_hand, "DEALER"), 20)

      self.assertEqual(mock_random([13,1], draw_starting_hand, "DEALER"), 21)
      self.assertEqual(mock_random([13,2], draw_starting_hand, "DEALER"), 12)
      self.assertEqual(mock_random([13,3], draw_starting_hand, "DEALER"), 13)
      self.assertEqual(mock_random([13,4], draw_starting_hand, "DEALER"), 14)
      self.assertEqual(mock_random([13,5], draw_starting_hand, "DEALER"), 15)
      self.assertEqual(mock_random([13,6], draw_starting_hand, "DEALER"), 16)
      self.assertEqual(mock_random([13,7], draw_starting_hand, "DEALER"), 17)
      self.assertEqual(mock_random([13,8], draw_starting_hand, "DEALER"), 18)
      self.assertEqual(mock_random([13,9], draw_starting_hand, "DEALER"), 19)
      self.assertEqual(mock_random([13,10], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([13,11], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([13,12], draw_starting_hand, "DEALER"), 20)
      self.assertEqual(mock_random([13,13], draw_starting_hand, "DEALER"), 20)



  def test_print_end_game_status(self):
      
      self.assertEqual(get_print(print_end_game_status, 4, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 4, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
        
      self.assertEqual(get_print(print_end_game_status, 5, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 5, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 6, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 6, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 7, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 7, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 8, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 8, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 9, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 9, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 10, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 10, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 11, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 11, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 12, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 12, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")

      self.assertEqual(get_print(print_end_game_status, 13, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 13, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 14, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 14, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 15, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 15, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 16, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 16, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 17, 17), "-----------\nGAME RESULT\n-----------\nPush.\n")
      self.assertEqual(get_print(print_end_game_status, 17, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 17, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 18, 17), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 18), "-----------\nGAME RESULT\n-----------\nPush.\n")
      self.assertEqual(get_print(print_end_game_status, 18, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 18, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 19, 17), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 18), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 19), "-----------\nGAME RESULT\n-----------\nPush.\n")
      self.assertEqual(get_print(print_end_game_status, 19, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 19, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 20, 17), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 18), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 19), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 20), "-----------\nGAME RESULT\n-----------\nPush.\n")
      self.assertEqual(get_print(print_end_game_status, 20, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 20, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 21, 17), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 18), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 19), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 20), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 21), "-----------\nGAME RESULT\n-----------\nPush.\n")
      self.assertEqual(get_print(print_end_game_status, 21, 22), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 23), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 24), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 25), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 26), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      self.assertEqual(get_print(print_end_game_status, 21, 27), "-----------\nGAME RESULT\n-----------\nYou win!\n")
      
      self.assertEqual(get_print(print_end_game_status, 22, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 22, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")

      self.assertEqual(get_print(print_end_game_status, 23, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 23, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      
      self.assertEqual(get_print(print_end_game_status, 24, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 24, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      
      self.assertEqual(get_print(print_end_game_status, 25, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 25, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")

      self.assertEqual(get_print(print_end_game_status, 26, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 26, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")

      self.assertEqual(get_print(print_end_game_status, 27, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 27, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")

      self.assertEqual(get_print(print_end_game_status, 28, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 28, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      

      self.assertEqual(get_print(print_end_game_status, 29, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 29, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      
      self.assertEqual(get_print(print_end_game_status, 30, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 30, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")

      self.assertEqual(get_print(print_end_game_status, 31, 17), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 18), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 19), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 20), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 21), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 22), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 23), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 24), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 25), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 26), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")
      self.assertEqual(get_print(print_end_game_status, 31, 27), "-----------\nGAME RESULT\n-----------\nDealer wins!\n")  
    
  def test_print_end_turn_status(self):  

      self.assertEqual(get_print(print_end_turn_status, 4), "Final hand: 4.\n")
      self.assertEqual(get_print(print_end_turn_status, 5), "Final hand: 5.\n")
      self.assertEqual(get_print(print_end_turn_status, 6), "Final hand: 6.\n")
      self.assertEqual(get_print(print_end_turn_status, 7), "Final hand: 7.\n")
      self.assertEqual(get_print(print_end_turn_status, 8), "Final hand: 8.\n")
      self.assertEqual(get_print(print_end_turn_status, 9), "Final hand: 9.\n")
      self.assertEqual(get_print(print_end_turn_status, 10), "Final hand: 10.\n")
      self.assertEqual(get_print(print_end_turn_status, 11), "Final hand: 11.\n")
      self.assertEqual(get_print(print_end_turn_status, 12), "Final hand: 12.\n")
      self.assertEqual(get_print(print_end_turn_status, 13), "Final hand: 13.\n")
      self.assertEqual(get_print(print_end_turn_status, 14), "Final hand: 14.\n")
      self.assertEqual(get_print(print_end_turn_status, 15), "Final hand: 15.\n")
      self.assertEqual(get_print(print_end_turn_status, 16), "Final hand: 16.\n")
      self.assertEqual(get_print(print_end_turn_status, 17), "Final hand: 17.\n")
      self.assertEqual(get_print(print_end_turn_status, 18), "Final hand: 18.\n")
      self.assertEqual(get_print(print_end_turn_status, 19), "Final hand: 19.\n")
      self.assertEqual(get_print(print_end_turn_status, 20), "Final hand: 20.\n")
      self.assertEqual(get_print(print_end_turn_status, 21), "Final hand: 21.\nBLACKJACK!\n")
      self.assertEqual(get_print(print_end_turn_status, 22), "Final hand: 22.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 23), "Final hand: 23.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 24), "Final hand: 24.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 25), "Final hand: 25.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 26), "Final hand: 26.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 27), "Final hand: 27.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 28), "Final hand: 28.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 29), "Final hand: 29.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 30), "Final hand: 30.\nBUST.\n")
      self.assertEqual(get_print(print_end_turn_status, 31), "Final hand: 31.\nBUST.\n")

if __name__ == '__main__':
    unittest.main()